import Int8 "mo:base/Int8";
import HashMap "mo:base/HashMap";
import Hash "mo:base/Hash";
import Nat "mo:base/Nat";

actor NeuroVault {
  


type pochodzenie = {#Miami; #NowyJork; #Hegemonia; #Posterunek; #Detroid;#Texas;#Vegas };
type profesja = {#Chemik; #Ganger; #Gladiator; #Kurier; #Medyk; #Mafiozo; #Szaman; #WojownikAutostrad; #Zlodziej };
type specjalizacja = {#Technik; #Ranger; #Cwaniak; #Wojownik };

// elementy Rekord  
type Postac = {

imie: Text;
wiek : Int8;
pochodzenie : pochodzenie;
profesja : profesja;
specjalizacja : specjalizacja;

//statystyki postaci
budowa : Int8;
zrecznosc : Int8;
spryt:Int8;
percepcja:Int8;

};                
                                      // Pocz Rozmiar  Fun POr klucza Fun Haszujaca
//                             KLUCZ WARTOSC  /        /             /
var postacie = HashMap.HashMap<Nat, Postac>(10,Nat.equal, Hash.hash);

var nextId : Nat = 1;

// CREATE
public func createPostac
( imie:Text, wiek:Int8, pochodzenie:pochodzenie, specjalizacja:specjalizacja, profesja:profesja, budowa:Int8, zrecznosc: Int8, 
spryt: Int8, percepcja:Int8, charakter : Int8) : async Nat 
{
 nextId += 1;
 let id = nextId;

 let nowaPostac : Postac = 
 {
  imie = imie;
  wiek = wiek;
  pochodzenie = pochodzenie;
  profesja = profesja;
  specjalizacja = specjalizacja;
  budowa = budowa;
  zrecznosc = zrecznosc;
  charakter = charakter;
  spryt = spryt;
  percepcja = percepcja;

 };

 postacie.put(id,nowaPostac);

  return id;
};

//READ 
                                            // Zwraca null albo Postac
public func readPostac( id: Nat) : async ?Postac 
{
return postacie.get(id);
  
};








  };

